name: CI (build, test, SonarCloud)

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  build_test_analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # per permettere la PR decoration di SonarCloud

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: akaAntox_CS2InvestmentTracker
      SONAR_ORG: akaantox

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessario per "new code" su PR

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: SonarCloud - Begin
        run: >
          dotnet-sonarscanner begin
          /k:"$SONAR_PROJECT_KEY"
          /o:"$SONAR_ORG"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.login="$SONAR_TOKEN"
          /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
          /d:sonar.cs.coverageReportPaths="**/coverage.cobertura.xml"
          /d:sonar.coverage.exclusions="**/*.g.cs,**/*.gen.cs,**/Migrations/**"

      - name: Restore
        run: dotnet restore CS2InvestmentTracker.sln

      - name: Build (Release)
        run: dotnet build CS2InvestmentTracker.sln --no-restore -c Release

      - name: Test (with coverage if tests exist)
        run: |
          set -e
          TESTS=$(find . -name "*Tests.csproj" | wc -l)
          if [ "$TESTS" -gt "0" ]; then
            for proj in $(find . -name "*Tests.csproj"); do
              dotnet test "$proj" -c Release --no-build \
                --logger "trx;LogFileName=${proj##*/}.trx" \
                --collect:"XPlat Code Coverage";
            done
          else
            echo "Nessun progetto di test trovato: salto i test ma proseguo con l'analisi."
          fi

      - name: SonarCloud - End (Publish)
        run: dotnet-sonarscanner end /d:sonar.login="$SONAR_TOKEN"

      - name: Upload test/coverage artifacts (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tests-and-coverage
          path: |
            **/TestResults/*.trx
            **/coverage.cobertura.xml
          if-no-files-found: ignore
